{"version":3,"file":"static/js/144.b184f013.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/PhoneContacts/PhoneContacts.module.css?6b2b","components/PhoneContacts/PhoneContacts.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phon-container\":\"ContactForm_phon-container__5HWAs\",\"containers\":\"ContactForm_containers__6r4oX\",\"form-label\":\"ContactForm_form-label__Iv1vR\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nimport css from 'components/ContactForm/ContactForm.module.css';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (name === 'name') setName(value);\n    else if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ id: nanoid(), name, number });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={css.containers} onSubmit={handleSubmit}>\n        <div className={css['phon-container']}>\n          <label htmlFor=\"exampleInputName\" className={css['form-label']}>\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            value={name}\n            placeholder=\"Jacob Mercer\"\n            required\n          />\n        </div>\n\n        <div className={css['phon-container']}>\n          <label htmlFor=\"exampleInputNumber\" className={css['form-label']}>\n            Number\n          </label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            value={number}\n            placeholder=\"999-99-99\"\n            required\n          />\n        </div>\n\n        <button type=\"submit\" className={css.btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"contactLink\":\"ContactList_contactLink__-gd+P\",\"contactContainer\":\"ContactList_contactContainer__L+mXg\",\"contactHead\":\"ContactList_contactHead__xSbFH\",\"contactIndex\":\"ContactList_contactIndex__Vi9Ni\",\"contactTitle\":\"ContactList_contactTitle__RzOrZ\",\"btnIcon\":\"ContactList_btnIcon__OW52S\",\"stats\":\"ContactList_stats__4i-y2\",\"name\":\"ContactList_name__UCkFW\",\"icon\":\"ContactList_icon__Ly80F\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IoTrashBin } from 'react-icons/io5';\n\nimport css from 'components/ContactList/ContactList.module.css';\n\nexport const ContactList = ({ contacts = [], onDelete }) => {\n  return (\n    <section>\n      <div className={css.contactContainer}>\n        <h3 className={css.contactHead}>Name</h3>\n        <h3 className={css.contactHead}>Number</h3>\n      </div>\n      <ul className={css['contacts-list']}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={css.item}>\n            <p className={css.contactTitle}>{name}</p>\n            <a className={css.contactLink} href={'tel:' + number}>\n              {number}\n            </a>\n            <button\n              type=\"click\"\n              className={css.btnIcon}\n              onClick={() => onDelete(id)}\n            >\n              <span className={css.stats}>\n                <IoTrashBin className={css.icon} />\n              </span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"filterInput\":\"Filter_filterInput__1Cysk\",\"iconFilter\":\"Filter_iconFilter__QnYge\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { BiSearchAlt2 } from 'react-icons/bi';\nimport { filterChange } from 'store/filter/slice';\n\nimport css from 'components/Filter/Filter.module.css';\n\nexport const Filter = () => {\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    setValue(e.target.value);\n    dispatch(filterChange(e.target.value));\n  };\n  return (\n    <div>\n      <div className={css.filterContainer}>\n        <p className={css.filterTitle}>Find contacts by name</p>\n        <BiSearchAlt2 className={css.iconFilter} />\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={handleFilterChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PhoneContacts_title__1zVkA\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  createPhoneContacts,\n  deletePhoneContacts,\n  getPhoneContacts,\n} from 'store/phone/thunks.js';\nimport { getFilter } from 'store/filter/slice';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { toast } from 'react-hot-toast';\n\nimport css from 'components/PhoneContacts/PhoneContacts.module.css';\n\nexport const PhoneContacts = () => {\n  const { items, isLoading, error } = useSelector(state => state.contacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPhoneContacts());\n  }, [dispatch]);\n\n  const createContact = async contact => {\n    try {\n      const findContact = items.some(\n        el => el.name.toLowerCase() === contact.name.toLowerCase()\n      );\n\n      if (findContact) {\n        return toast.error(`${contact.name} is already in contacts`);\n      }\n\n      await dispatch(createPhoneContacts(contact));\n      toast.success('Contact added successfully');\n    } catch {\n      console.error('error');\n      toast.error('Something went wrong');\n    }\n  };\n\n  const removeContact = async contactId => {\n    try {\n      await dispatch(deletePhoneContacts(contactId));\n      toast.success('Contact deleted successfully');\n    } catch {\n      console.error('error');\n      toast.error('Something went wrong');\n    }\n  };\n\n  const filteredContacts = items.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  if (isLoading) {\n    return <h2>Loading...</h2>;\n  }\n\n  if (error) {\n    return <h2>Something went wrong...</h2>;\n  }\n\n  return (\n    <div>\n      <h2 className={css.title}>Phone book</h2>\n      <ContactForm onSubmit={createContact} />\n\n      {items.length > 2 && <Filter />}\n      {items.length > 0 ? (\n        <>\n          <h2 className={css.title}>Contacts</h2>\n          <ContactList contacts={filteredContacts} onDelete={removeContact} />\n        </>\n      ) : (\n        <p className={css.title}>No contacts</p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { PhoneContacts } from 'components/PhoneContacts/PhoneContacts';\n\nconst ContactsPage = () => {\n  return (\n    <nav>\n      <PhoneContacts />\n    </nav>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","target","value","className","css","e","preventDefault","id","nanoid","htmlFor","type","pattern","title","onChange","placeholder","required","ContactList","contacts","onDelete","map","href","onClick","Filter","setValue","dispatch","useDispatch","filterChange","PhoneContacts","useSelector","state","items","isLoading","error","filter","getFilter","useEffect","getPhoneContacts","createContact","contact","some","el","toLowerCase","toast","createPhoneContacts","console","removeContact","contactId","deletePhoneContacts","filteredContacts","includes","length"],"sourceRoot":""}